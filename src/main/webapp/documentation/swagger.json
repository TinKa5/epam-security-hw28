{
  "swagger": "2.0",
  "info": {
    "description": "This is a CRUD REST API DeveloperCRUD",
    "version": "1.0.0",
    "title": "EpamDev",
    "termsOfService": "https://epamdev.herokuapp.com/",
    "contact": {
      "email": "tanua8282@gmail.com"
    }
  },
  "host": "epamdev.herokuapp.com",
  "basePath": "/",
  "tags": [
    {
      "name": "skill",
      "description": ""
    },
    {
      "name": "account",
      "description": ""
    },
    {
      "name": "developer",
      "description": ""
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/skill": {
      "get": {
        "tags": [
          "skill"
        ],
        "summary": "Get all skills if no parameters otherwise get by id",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of skill",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Skill"
              }
            }
          },
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Skill"
            }
          }
        }
      },
      "post": {
        "tags": [
          "skill"
        ],
        "summary": "Add a new skill",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "skill",
            "schema": {
              "$ref": "#/definitions/Skill"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Skill"
            }
          },
          "551": {
            "description": "Incorrect Json format"
          },
          "561": {
            "description": "Cannot create skill"
          }
        }
      },
      "delete": {
        "tags": [
          "skill"
        ],
        "summary": "Delete skill",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of skill",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Skill"
              }
            }
          },
          "552": {
            "description": "Incorrect id parameter"
          },
          "561": {
            "description": "Cannot delete skill"
          }
        }
      }
    },
    "/account": {
      "get": {
        "tags": [
          "account"
        ],
        "summary": "Get all accounts if no parameters otherwise get by id",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of account",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Account"
              }
            }
          },
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        }
      },
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Add a new account",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "account",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "551": {
            "description": "Incorrect Json format"
          },
          "561": {
            "description": "Cannot create account"
          }
        }
      },
      "delete": {
        "tags": [
          "account"
        ],
        "summary": "Delete account",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of account",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Account"
              }
            }
          },
          "552": {
            "description": "Incorrect id parameter"
          },
          "561": {
            "description": "Cannot delete account"
          }
        }
      }
    },
    "/developer": {
      "get": {
        "tags": [
          "developer"
        ],
        "summary": "Get all developers if no parameters otherwise get by id",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of developer",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Developer"
              }
            }
          },
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Developer"
            }
          }
        }
      },
      "post": {
        "tags": [
          "developer"
        ],
        "summary": "Add a new developer",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "developer",
            "schema": {
              "$ref": "#/definitions/Developer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Developer"
            }
          },
          "551": {
            "description": "Incorrect Json format"
          },
          "561": {
            "description": "Cannot create developer"
          }
        }
      },
      "delete": {
        "tags": [
          "developer"
        ],
        "summary": "Delete developer",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of developer",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Developer"
              }
            }
          },
          "552": {
            "description": "Incorrect id parameter"
          },
          "561": {
            "description": "Cannot delete developer"
          }
        }
      }
    }
  },
  "definitions": {
    "Skill": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Account": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "content": {
          "type": "string"
        },
        "accountStatus": {
          "type": "string",
          "enum": [
            "ACTIVE",
            "NONACTIVE"
          ]
        }
      }
    },
    "Developer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "skillSet": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Skill"
          }
        },
        "account": {
          "$ref": "#/definitions/Account"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}